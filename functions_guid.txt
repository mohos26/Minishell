-------------------------------------------
-------------------------------------------
-------- Functions Of MiniShell -----------
-------------------------------------------
-------------------------------------------

+ char *readline(const char *)
	like 'input' in python3.
-------------------------------------------
+ rl_clear_history
	?
-------------------------------------------
+ rl_on_new_line
	?
-------------------------------------------
+ rl_replace_line
	?
-------------------------------------------
+ rl_redisplay
	?
-------------------------------------------
+ int add_history(const char *)
	if you click 'Up arrow' in bash, you can
look your history. same thing, if you get
a str to 'add_history' you can scroll it.
-------------------------------------------
+ pid_t wait(int *)
	It stops the current process until its
brother finishes, regardless of father or
son. he return that status of his brother.
-------------------------------------------
+ pid_t waitpid(pid_t, int *, int)
	like base 'wait', but you can give it a
specific pid, and the three arg has to flags:
- WNOHANG: If no child has exited yet,
return immediately with 0 instead of blocking.
- WUNTRACED: Return if a child has stopped
(but not terminated), and its status has
been reported.
-------------------------------------------
+ pid_t wait3(int *, int, struct rusage *)
	?
-------------------------------------------
+ pid_t wait4(pid_t, int *, int, struct rusage *)
	?
-------------------------------------------
+ signal, sigaction, sigemptyset, sigaddset, kill
	?
-------------------------------------------
+ char *getcwd(char *, size_t)
	get the currently pwd, and you can stord
it in ptr.
-------------------------------------------
+ int chdir(const char *)
	change current directory.
-------------------------------------------
+  int stat(const char *, struct stat *)
	he get to you info of file:
struct stat
{
	dev_t		st_dev;           # ID of device containing file like [USB, Macintosh HD]
	mode_t		st_mode;          # details of file like [file or directory, permision]
	nlink_t		st_nlink;         # Number of hard links
	__darwin_ino64_t st_ino;      # File serial number
	uid_t		st_uid;           # User ID of the file
	gid_t		st_gid;           # Group ID of the file
	dev_t		st_rdev;          # Device ID if the file is a device like '/dev/sda'
	__DARWIN_STRUCT_STAT64_TIMES  # This is likely a macro that is expanded to include time information:
								  ## st_atime: Last access time of file
								  ## st_mtime: Last modification time
								  ## st_ctime: Last metadata change time
	off_t		st_size;          # file size, in bytes
	blkcnt_t	st_blocks;        # blocks allocated for file
	blksize_t	st_blksize;       # optimal blocksize for I/O
	__uint32_t	st_flags;         # user defined flags for file
	__uint32_t	st_gen;           # file generation number
}
-------------------------------------------

-------------------------------------------
